 INFO  mir_checker > Analysis Option: AnalysisOption { entry_point: "main", entry_def_id_index: None, domain_type: Interval, widening_delay: 5, cleaning_delay: 5, narrowing_iteration: 5, show_entries: false, show_entries_index: false, deny_warnings: false, memory_safety_only: false, suppressed_warnings: None }
 INFO  mir_checker > Analysis Option: AnalysisOption { entry_point: "main", entry_def_id_index: None, domain_type: Interval, widening_delay: 5, cleaning_delay: 5, narrowing_iteration: 5, show_entries: false, show_entries_index: false, deny_warnings: false, memory_safety_only: false, suppressed_warnings: None }
 INFO  rust_mir_checker::analysis::callback > Source file: example/example3/src/case1.rs
 INFO  rust_mir_checker::analysis::callback > Source file: example/example3/src/case1.rs
 INFO  rust_mir_checker::analysis::global_context > Initializing GlobalContext
 INFO  rust_mir_checker::analysis::global_context > Initializing GlobalContext
 DEBUG rust_mir_checker::analysis::global_context > Name: "get", DefId: DefId(0:6 ~ case1[f6dd]::{impl#0}::get), DefKind: AssocFn
 DEBUG rust_mir_checker::analysis::global_context > Name: "get", DefId: DefId(0:6 ~ case1[f6dd]::{impl#0}::get), DefKind: AssocFn
 DEBUG rust_mir_checker::analysis::global_context > Entry Point: "main", DefId: DefId(0:7 ~ case1[f6dd]::main)
 DEBUG rust_mir_checker::analysis::global_context > Entry Point: "main", DefId: DefId(0:7 ~ case1[f6dd]::main)
 DEBUG rust_mir_checker::analysis::global_context > Name: "id", DefId: DefId(0:8 ~ case1[f6dd]::id), DefKind: Fn
 DEBUG rust_mir_checker::analysis::global_context > Name: "id", DefId: DefId(0:8 ~ case1[f6dd]::id), DefKind: Fn
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Numerical Analysis Starts ==================
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > Abstract Domain Type: Interval
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > Widening Delay: 5
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > Start Analyzing Entry Point Function: main
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Numerical Analysis Starts ==================
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > Abstract Domain Type: Interval
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > Widening Delay: 5
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > Start Analyzing Entry Point Function: main
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Fixed-Point Algorithm Starts To Analyze: main ==================
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Fixed-Point Algorithm Starts To Analyze: main ==================
 DEBUG rust_mir_checker::analysis::wto                          > WTO Nesting: {bb6: [],bb4: [],bb7: [],bb3: [],bb5: [],bb8: [],bb9: [],bb2: [],bb1: [],bb0: []}
 DEBUG rust_mir_checker::analysis::wto                          > WTO Nesting: {bb6: [],bb4: [],bb7: [],bb3: [],bb5: [],bb8: [],bb9: [],bb2: [],bb1: [],bb0: []}
 DEBUG rust_mir_checker::analysis::global_context               > Compute the new w.t.o for main: bb0 bb1 bb2 bb3 bb4 bb5 bb7 bb8 bb9 bb6
 DEBUG rust_mir_checker::analysis::global_context               > Compute the new w.t.o for main: bb0 bb1 bb2 bb3 bb4 bb5 bb7 bb8 bb9 bb6
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start initializing promoted constants
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start initializing promoted constants
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get promoted MIR 0: Body { basic_blocks: BasicBlocks { basic_blocks: [BasicBlockData { statements: [_1 = [const "j == ", const "\n"], _0 = &_1], terminator: Some(Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:21:14: 21:23 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }], cache: Cache { predecessors: OnceLock(<uninit>), switch_sources: OnceLock(<uninit>), reverse_postorder: OnceLock(<uninit>), dominators: OnceLock(<uninit>) } }, phase: Runtime(PostCleanup), pass_count: 1, source: MirSource { instance: Item(DefId(0:7 ~ case1[f6dd]::main)), promoted: Some(promoted[0]) }, source_scopes: [SourceScopeData { span: example/example3/src/case1.rs:19:5: 22:2 (#0), parent_scope: None, inlined: None, inlined_parent_scope: None, local_data: Set(SourceScopeLocalData { lint_root: HirId(DefId(0:7 ~ case1[f6dd]::main).0) }) }], coroutine: None, local_decls: [LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: example/example3/src/case1.rs:21:14: 21:23 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: example/example3/src/case1.rs:21:14: 21:23 (#0), scope: scope[0] } }], user_type_annotations: [], arg_count: 0, spread_arg: None, var_debug_info: [], span: example/example3/src/case1.rs:21:14: 21:23 (#0), required_consts: Some([]), mentioned_items: None, is_polymorphic: false, injection_phase: None, tainted_by_errors: None, coverage_info_hi: None, function_coverage_info: None }
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get promoted MIR 0: Body { basic_blocks: BasicBlocks { basic_blocks: [BasicBlockData { statements: [_1 = [const "j == ", const "\n"], _0 = &_1], terminator: Some(Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:21:14: 21:23 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }], cache: Cache { predecessors: OnceLock(<uninit>), switch_sources: OnceLock(<uninit>), reverse_postorder: OnceLock(<uninit>), dominators: OnceLock(<uninit>) } }, phase: Runtime(PostCleanup), pass_count: 1, source: MirSource { instance: Item(DefId(0:7 ~ case1[f6dd]::main)), promoted: Some(promoted[0]) }, source_scopes: [SourceScopeData { span: example/example3/src/case1.rs:19:5: 22:2 (#0), parent_scope: None, inlined: None, inlined_parent_scope: None, local_data: Set(SourceScopeLocalData { lint_root: HirId(DefId(0:7 ~ case1[f6dd]::main).0) }) }], coroutine: None, local_decls: [LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: example/example3/src/case1.rs:21:14: 21:23 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: example/example3/src/case1.rs:21:14: 21:23 (#0), scope: scope[0] } }], user_type_annotations: [], arg_count: 0, spread_arg: None, var_debug_info: [], span: example/example3/src/case1.rs:21:14: 21:23 (#0), required_consts: Some([]), mentioned_items: None, is_polymorphic: false, injection_phase: None, tainted_by_errors: None, coverage_info_hi: None, function_coverage_info: None }
 DEBUG rust_mir_checker::analysis::global_context               > Using cached w.t.o for main
 DEBUG rust_mir_checker::analysis::global_context               > Using cached w.t.o for main
 DEBUG rust_mir_checker::analysis::wto                          > WTO Nesting: {bb0: []}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > promoted constant wto: bb0
 DEBUG rust_mir_checker::analysis::wto                          > WTO Nesting: {bb0: []}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > promoted constant wto: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: ⊤, symbolic: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: ⊤, symbolic: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_1, [const "j == ", const "\n"])) statement: _1 = [const "j == ", const "\n"]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_1, [const "j == ", const "\n"])) statement: _1 = [const "j == ", const "\n"]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.1, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.1, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Aggregate(Array(&'{erased} str), [const "j == ", const "\n"])
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.1, value: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Aggregate(Array(&'{erased} str), [const "j == ", const "\n"])
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.1, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > constant: const "j == ", const_: Val(Slice { data: ConstAllocation { .. }, meta: 5 }, &'{erased} str), rh_type: &'{erased} str
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > constant: const "j == ", const_: Val(Slice { data: ConstAllocation { .. }, meta: 5 }, &'{erased} str), rh_type: &'{erased} str
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Slice { data: ConstAllocation { .. }, meta: 5 }, &'{erased} str)
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Slice { data: ConstAllocation { .. }, meta: 5 }, &'{erased} str)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=local_1.[0], source_path=alias_TOP
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=local_1.[0], source_path=alias_TOP
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_TOP, result type: &'{erased} str
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_TOP, result type: &'{erased} str
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: TOP, value type: Reference
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_TOP, result type: &'{erased} str
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying TOP to local_1.[0]
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.[0], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant but not integer, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: TOP, value type: Reference
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_TOP, result type: &'{erased} str
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying TOP to local_1.[0]
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.[0], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant but not integer, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > constant: const "\n", const_: Val(Slice { data: ConstAllocation { .. }, meta: 1 }, &'{erased} str), rh_type: &'{erased} str
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > constant: const "\n", const_: Val(Slice { data: ConstAllocation { .. }, meta: 1 }, &'{erased} str), rh_type: &'{erased} str
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Slice { data: ConstAllocation { .. }, meta: 1 }, &'{erased} str)
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Slice { data: ConstAllocation { .. }, meta: 1 }, &'{erased} str)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=local_1.[1], source_path=alias_TOP
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=local_1.[1], source_path=alias_TOP
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_TOP, result type: &'{erased} str
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: TOP, value type: Reference
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_TOP, result type: &'{erased} str
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: TOP, value type: Reference
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_TOP, result type: &'{erased} str
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_TOP, result type: &'{erased} str
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying TOP to local_1.[1]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying TOP to local_1.[1]
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.[1], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.[1], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant but not integer, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant but not integer, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {local_1.1=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {local_1.1=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {local_1.[0]: TOP, local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {local_1.[0]: TOP, local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, &_1)) statement: _0 = &_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, &_1)) statement: _0 = &_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Ref/AddressOf(_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Ref/AddressOf(_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.1, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.1, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In handling `path = &place`, get path of place=local_1
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In handling `path = &place`, get path of place=local_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_address_of, updating value at path=result, value=&(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_address_of, updating value at path=result, value=&(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {local_1.1=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {local_1.1=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:21:14: 21:23 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:21:14: 21:23 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {local_1.1=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {local_1.1=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {local_1.1=2}, symbolic: {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {local_1.1=2}, symbolic: {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get exit state for promoted MIR: numerical: {local_1.1=2}, symbolic: {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get exit state for promoted MIR: numerical: {local_1.1=2}, symbolic: {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: result, result type: &'{erased} [&'{erased} str; 2_usize]
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: result, result type: &'{erased} [&'{erased} str; 2_usize]
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > In promote_reference, state: numerical: {local_1.1=2}, symbolic: {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > In promote_reference, state: numerical: {local_1.1=2}, symbolic: {local_1.[0]: TOP, result: &(local_1), local_1.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Find: path: local_1.1, value: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Find: path: local_1.1, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at <heap_0>.1, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Find: path: local_1.[0], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at <heap_0>.1, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Find: path: local_1.[0], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at <heap_0>.[0], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at <heap_0>.[0], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant but not integer, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant but not integer, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Find: path: local_1.[1], value: TOP
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Find: path: local_1.[1], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at <heap_0>.[1], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at <heap_0>.[1], value: TOP
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant but not integer, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant but not integer, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at constant_0, value: &(<heap_0>)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at constant_0, value: &(<heap_0>)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish promote reference, environment: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish promote reference, environment: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Before join, init: numerical: ⊤, symbolic: {}, environment: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Before join, init: numerical: ⊤, symbolic: {}, environment: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > After meet, environment: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > After meet, environment: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish initializing promoted constants, init_state: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish initializing promoted constants, init_state: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2}, symbolic: {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_1, Number { num: const 1_i32 })) statement: _1 = Number { num: const 1_i32 }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_1, Number { num: const 1_i32 })) statement: _1 = Number { num: const 1_i32 }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Aggregate(Adt(DefId(0:3 ~ case1[f6dd]::Number), 0, [], None, None), [const 1_i32])
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Aggregate(Adt(DefId(0:3 ~ case1[f6dd]::Number), 0, [], None, None), [const 1_i32])
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > constant: const 1_i32, const_: Val(Scalar(0x00000001), i32), rh_type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > constant: const 1_i32, const_: Val(Scalar(0x00000001), i32), rh_type: i32
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Scalar(0x00000001), i32)
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Scalar(0x00000001), i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=local_1.0, source_path=alias_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=local_1.0, source_path=alias_1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_1, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_1, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: 1, value type: I128
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: 1, value type: I128
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_1, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_1, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying 1 to local_1.0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying 1 to local_1.0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.0, value: 1
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_1.0, value: 1
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_2, Number { num: const 2_i32 })) statement: _2 = Number { num: const 2_i32 }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_2, Number { num: const 2_i32 })) statement: _2 = Number { num: const 2_i32 }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Aggregate(Adt(DefId(0:3 ~ case1[f6dd]::Number), 0, [], None, None), [const 2_i32])
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Aggregate(Adt(DefId(0:3 ~ case1[f6dd]::Number), 0, [], None, None), [const 2_i32])
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > constant: const 2_i32, const_: Val(Scalar(0x00000002), i32), rh_type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > constant: const 2_i32, const_: Val(Scalar(0x00000002), i32), rh_type: i32
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Scalar(0x00000002), i32)
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Scalar(0x00000002), i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=local_2.0, source_path=alias_2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=local_2.0, source_path=alias_2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_2, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_2, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: 2, value type: I128
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: 2, value type: I128
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_2, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: alias_2, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying 2 to local_2.0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying 2 to local_2.0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_2.0, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_2.0, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {<heap_0>.[1]: TOP, constant_0: &(<heap_0>), <heap_0>.[0]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_4, &_1)) statement: _4 = &_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_4, &_1)) statement: _4 = &_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_4
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Ref/AddressOf(_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_4
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Ref/AddressOf(_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In handling `path = &place`, get path of place=local_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_address_of, updating value at path=local_4, value=&(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_4, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In handling `path = &place`, get path of place=local_1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_address_of, updating value at path=local_4, value=&(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_4, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {<heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {<heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:15:13: 15:20 (#0), scope: scope[2] }, kind: _3 = id(copy _4) -> [return: bb1, unwind unreachable] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:15:13: 15:20 (#0), scope: scope[2] }, kind: _3 = id(copy _4) -> [return: bb1, unwind unreachable] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: id, arguments: [Spanned { node: copy _4, span: example/example3/src/case1.rs:15:16: 15:19 (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: id, arguments: [Spanned { node: copy _4, span: example/example3/src/case1.rs:15:16: 15:19 (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {<heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {<heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(0:8 ~ case1[f6dd]::id), []))
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(0:8 ~ case1[f6dd]::id), []))
 DEBUG rust_mir_checker::analysis::memory::known_names          > TEST: DefPath { data: [DisambiguatedDefPathData { data: ValueNs("id"), disambiguator: 0 }], krate: crate0 }
 DEBUG rust_mir_checker::analysis::memory::known_names          > TEST: DefPath { data: [DisambiguatedDefPathData { data: ValueNs("id"), disambiguator: 0 }], krate: crate0 }
 INFO  rust_mir_checker::analysis::memory::constant_value       > known_name: None
 INFO  rust_mir_checker::analysis::memory::constant_value       > known_name: None
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn case1.id<[]>
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn case1.id<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_4, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_4, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(local_4, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(local_4, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} Number]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} Number]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_3
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_3
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn case1.id<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn case1.id<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(0:8 ~ case1[f6dd]::id)), function_id: Some(0), generic_arguments: [], known_name: None, function_name: "case1.id" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(0:8 ~ case1[f6dd]::id)), function_id: Some(0), generic_arguments: [], known_name: None, function_name: "case1.id" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Executing call visitor...
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > call stack [DefId(0:8 ~ case1[f6dd]::id)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Creating callee's post state, def_id=DefId(0:8 ~ case1[f6dd]::id), type of def_id=EarlyBinder { value: FnDef(DefId(0:8 ~ case1[f6dd]::id), []), .. }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Executing call visitor...
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > call stack [DefId(0:8 ~ case1[f6dd]::id)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Creating callee's post state, def_id=DefId(0:8 ~ case1[f6dd]::id), type of def_id=EarlyBinder { value: FnDef(DefId(0:8 ~ case1[f6dd]::id), []), .. }
 INFO  rust_mir_checker::analysis::mir_visitor::call_visitor    > ====== Fixed-Point Algorithm Starts ======
 INFO  rust_mir_checker::analysis::mir_visitor::call_visitor    > ====== Fixed-Point Algorithm Starts ======
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Initializing Fixed point iterator with abstract domain: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {<heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Initializing Fixed point iterator with abstract domain: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {<heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::wto                          > WTO Nesting: {bb0: []}
 DEBUG rust_mir_checker::analysis::wto                          > WTO Nesting: {bb0: []}
 DEBUG rust_mir_checker::analysis::global_context               > Compute the new w.t.o for id: bb0
 DEBUG rust_mir_checker::analysis::global_context               > Compute the new w.t.o for id: bb0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at param_1000001, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at param_1000001, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Initializing pre condition: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Initializing pre condition: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Running fixed point iterator
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Running fixed point iterator
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, copy _1)) statement: _0 = copy _1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, copy _1)) statement: _0 = copy _1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 1000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 1000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Use(copy _1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 1000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get copy RPath=param_1000001
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=result, source_path=param_1000001
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Use(copy _1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 1000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get copy RPath=param_1000001
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=result, source_path=param_1000001
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: param_1000001, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: param_1000001, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: &(local_1), value type: Reference
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: &(local_1), value type: Reference
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: param_1000001, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: param_1000001, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying &(local_1) to result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying &(local_1) to result
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:26:2: 26:2 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:26:2: 26:2 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker starts ======
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker starts ======
 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker ends ======
 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker ends ======
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Fixed point iterator finishes, post: {bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Fixed point iterator finishes, post: {bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Finish call visitor, get function post state numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Finish call visitor, get function post state numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), result: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before handling side-effects, pre env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {<heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before handling side-effects, pre env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {<heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Start to transfer and refine normal return state
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Start to transfer and refine normal return state
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > target_path: local_3
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > target_path: local_3
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > side_effects: [(result, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > side_effects: [(result, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Handling side effects on call result
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Handling side effects on call result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In transfer and refine, effects: [(result, &(local_1))], target_path: local_3, source_path: result, arguments: [(local_4, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In transfer and refine, effects: [(result, &(local_1))], target_path: local_3, source_path: result, arguments: [(local_4, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > effect result &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > effect result &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > refined effect local_3 &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > refined effect local_3 &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_3, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_3, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After handling side-effects, post env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After handling side-effects, post env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb1: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb1: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_6, &_2)) statement: _6 = &_2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_6, &_2)) statement: _6 = &_2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_6
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Ref/AddressOf(_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_6
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Ref/AddressOf(_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In handling `path = &place`, get path of place=local_2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_address_of, updating value at path=local_6, value=&(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_6, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In handling `path = &place`, get path of place=local_2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_address_of, updating value at path=local_6, value=&(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_6, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_3: &(local_1), local_6: &(local_2), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_3: &(local_1), local_6: &(local_2), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:16:13: 16:20 (#0), scope: scope[3] }, kind: _5 = id(copy _6) -> [return: bb2, unwind unreachable] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:16:13: 16:20 (#0), scope: scope[3] }, kind: _5 = id(copy _6) -> [return: bb2, unwind unreachable] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: id, arguments: [Spanned { node: copy _6, span: example/example3/src/case1.rs:16:16: 16:19 (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: id, arguments: [Spanned { node: copy _6, span: example/example3/src/case1.rs:16:16: 16:19 (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), local_6: &(local_2), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), local_6: &(local_2), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(0:8 ~ case1[f6dd]::id), []))
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(0:8 ~ case1[f6dd]::id), []))
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn case1.id<[]>
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn case1.id<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_6, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_6, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(local_6, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(local_6, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} Number]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} Number]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_5
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_5
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn case1.id<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn case1.id<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(0:8 ~ case1[f6dd]::id)), function_id: Some(0), generic_arguments: [], known_name: None, function_name: "case1.id" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(0:8 ~ case1[f6dd]::id)), function_id: Some(0), generic_arguments: [], known_name: None, function_name: "case1.id" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Executing call visitor...
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Executing call visitor...
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > call stack [DefId(0:8 ~ case1[f6dd]::id)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > call stack [DefId(0:8 ~ case1[f6dd]::id)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Creating callee's post state, def_id=DefId(0:8 ~ case1[f6dd]::id), type of def_id=EarlyBinder { value: FnDef(DefId(0:8 ~ case1[f6dd]::id), []), .. }
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Creating callee's post state, def_id=DefId(0:8 ~ case1[f6dd]::id), type of def_id=EarlyBinder { value: FnDef(DefId(0:8 ~ case1[f6dd]::id), []), .. }
 INFO  rust_mir_checker::analysis::mir_visitor::call_visitor    > ====== Fixed-Point Algorithm Starts ======
 INFO  rust_mir_checker::analysis::mir_visitor::call_visitor    > ====== Fixed-Point Algorithm Starts ======
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Initializing Fixed point iterator with abstract domain: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), local_6: &(local_2), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Initializing Fixed point iterator with abstract domain: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), local_6: &(local_2), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::global_context               > Using cached w.t.o for id
 DEBUG rust_mir_checker::analysis::global_context               > Using cached w.t.o for id
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at param_2000001, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at param_2000001, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Initializing pre condition: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Running fixed point iterator
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Initializing pre condition: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Running fixed point iterator
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, copy _1)) statement: _0 = copy _1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 2000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Use(copy _1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 2000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, copy _1)) statement: _0 = copy _1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 2000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Use(copy _1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 2000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get copy RPath=param_2000001
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get copy RPath=param_2000001
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=result, source_path=param_2000001
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=result, source_path=param_2000001
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: param_2000001, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: param_2000001, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: &(local_2), value type: Reference
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: param_2000001, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: &(local_2), value type: Reference
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: param_2000001, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying &(local_2) to result
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying &(local_2) to result
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:26:2: 26:2 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:26:2: 26:2 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Fixed point iterator finishes, post: {bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Finish call visitor, get function post state numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before handling side-effects, pre env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), local_6: &(local_2), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Start to transfer and refine normal return state
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > target_path: local_5
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > side_effects: [(result, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Handling side effects on call result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In transfer and refine, effects: [(result, &(local_2))], target_path: local_5, source_path: result, arguments: [(local_6, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > effect result &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Fixed point iterator finishes, post: {bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Finish call visitor, get function post state numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, constant_0: &(<heap_0>), result: &(local_2), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before handling side-effects, pre env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_3: &(local_1), local_6: &(local_2), <heap_0>.[0]: TOP, local_4: &(local_1), constant_0: &(<heap_0>), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Start to transfer and refine normal return state
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > target_path: local_5
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > side_effects: [(result, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Handling side effects on call result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In transfer and refine, effects: [(result, &(local_2))], target_path: local_5, source_path: result, arguments: [(local_6, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > effect result &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > refined effect local_5 &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_5, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > refined effect local_5 &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_5, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After handling side-effects, post env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After handling side-effects, post env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb1: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb1: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb1: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb1: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb1: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb1: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb2: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb2: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:18:13: 18:20 (#0), scope: scope[4] }, kind: _7 = Number::get(copy _3) -> [return: bb3, unwind unreachable] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: Number::get, arguments: [Spanned { node: copy _3, span: example/example3/src/case1.rs:18:13: 18:14 (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(0:6 ~ case1[f6dd]::{impl#0}::get), []))
 DEBUG rust_mir_checker::analysis::memory::known_names          > TEST: DefPath { data: [DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs("get"), disambiguator: 0 }], krate: crate0 }
 INFO  rust_mir_checker::analysis::memory::constant_value       > known_name: None
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn case1.implement.get<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_3, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(local_3, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} Number]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_7
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn case1.implement.get<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(0:6 ~ case1[f6dd]::{impl#0}::get)), function_id: Some(1), generic_arguments: [], known_name: None, function_name: "case1.implement.get" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Executing call visitor...
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > call stack [DefId(0:6 ~ case1[f6dd]::{impl#0}::get)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Creating callee's post state, def_id=DefId(0:6 ~ case1[f6dd]::{impl#0}::get), type of def_id=EarlyBinder { value: FnDef(DefId(0:6 ~ case1[f6dd]::{impl#0}::get), []), .. }
 INFO  rust_mir_checker::analysis::mir_visitor::call_visitor    > ====== Fixed-Point Algorithm Starts ======
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Initializing Fixed point iterator with abstract domain: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::wto                          > WTO Nesting: {bb0: []}
 DEBUG rust_mir_checker::analysis::global_context               > Compute the new w.t.o for get: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:18:13: 18:20 (#0), scope: scope[4] }, kind: _7 = Number::get(copy _3) -> [return: bb3, unwind unreachable] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: Number::get, arguments: [Spanned { node: copy _3, span: example/example3/src/case1.rs:18:13: 18:14 (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(0:6 ~ case1[f6dd]::{impl#0}::get), []))
 DEBUG rust_mir_checker::analysis::memory::known_names          > TEST: DefPath { data: [DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs("get"), disambiguator: 0 }], krate: crate0 }
 INFO  rust_mir_checker::analysis::memory::constant_value       > known_name: None
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn case1.implement.get<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_3, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_1)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(local_3, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} Number]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_7
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn case1.implement.get<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(0:6 ~ case1[f6dd]::{impl#0}::get)), function_id: Some(1), generic_arguments: [], known_name: None, function_name: "case1.implement.get" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Executing call visitor...
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > call stack [DefId(0:6 ~ case1[f6dd]::{impl#0}::get)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Creating callee's post state, def_id=DefId(0:6 ~ case1[f6dd]::{impl#0}::get), type of def_id=EarlyBinder { value: FnDef(DefId(0:6 ~ case1[f6dd]::{impl#0}::get), []), .. }
 INFO  rust_mir_checker::analysis::mir_visitor::call_visitor    > ====== Fixed-Point Algorithm Starts ======
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Initializing Fixed point iterator with abstract domain: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::wto                          > WTO Nesting: {bb0: []}
 DEBUG rust_mir_checker::analysis::global_context               > Compute the new w.t.o for get: bb0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at param_3000001, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at param_3000001, value: &(local_1)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Initializing pre condition: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Running fixed point iterator
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Initializing pre condition: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Running fixed point iterator
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, copy ((*_1).0: i32))) statement: _0 = copy ((*_1).0: i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 3000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, copy ((*_1).0: i32))) statement: _0 = copy ((*_1).0: i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 3000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Use(copy ((*_1).0: i32))
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 3000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get copy RPath=local_1.0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=result, source_path=local_1.0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_1.0, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Use(copy ((*_1).0: i32))
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 3000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get copy RPath=local_1.0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=result, source_path=local_1.0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_1.0, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: 1, value type: I128
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_1.0, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: 1, value type: I128
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_1.0, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying 1 to result
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying 1 to result
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: 1
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: 1
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:8:6: 8:6 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:8:6: 8:6 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker starts ======
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker starts ======
 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker ends ======
 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker ends ======
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Fixed point iterator finishes, post: {bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Fixed point iterator finishes, post: {bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Finish call visitor, get function post state numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Finish call visitor, get function post state numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; result=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before handling side-effects, pre env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before handling side-effects, pre env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Start to transfer and refine normal return state
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Start to transfer and refine normal return state
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > target_path: local_7
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > target_path: local_7
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > side_effects: [(result, 1)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Handling side effects on call result
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > side_effects: [(result, 1)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Handling side effects on call result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In transfer and refine, effects: [(result, 1)], target_path: local_7, source_path: result, arguments: [(local_3, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > effect result 1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > refined effect local_7 1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In transfer and refine, effects: [(result, 1)], target_path: local_7, source_path: result, arguments: [(local_3, &(local_1))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > effect result 1
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > refined effect local_7 1
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_7, value: 1
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_7, value: 1
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After handling side-effects, post env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After handling side-effects, post env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb2: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb2: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb2: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb2: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb2: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb2: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb3
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb3
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb3: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb3: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:19:13: 19:20 (#0), scope: scope[5] }, kind: _8 = Number::get(copy _5) -> [return: bb4, unwind unreachable] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: Number::get, arguments: [Spanned { node: copy _5, span: example/example3/src/case1.rs:19:13: 19:14 (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:19:13: 19:20 (#0), scope: scope[5] }, kind: _8 = Number::get(copy _5) -> [return: bb4, unwind unreachable] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: Number::get, arguments: [Spanned { node: copy _5, span: example/example3/src/case1.rs:19:13: 19:14 (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(0:6 ~ case1[f6dd]::{impl#0}::get), []))
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(0:6 ~ case1[f6dd]::{impl#0}::get), []))
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn case1.implement.get<[]>
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn case1.implement.get<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_5, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_5, result type: &'{erased} Number
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: &(local_2)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(local_5, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} Number]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(local_5, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} Number]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_8
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_8
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn case1.implement.get<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn case1.implement.get<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(0:6 ~ case1[f6dd]::{impl#0}::get)), function_id: Some(1), generic_arguments: [], known_name: None, function_name: "case1.implement.get" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(0:6 ~ case1[f6dd]::{impl#0}::get)), function_id: Some(1), generic_arguments: [], known_name: None, function_name: "case1.implement.get" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Executing call visitor...
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > call stack [DefId(0:6 ~ case1[f6dd]::{impl#0}::get)]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Executing call visitor...
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > call stack [DefId(0:6 ~ case1[f6dd]::{impl#0}::get)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Creating callee's post state, def_id=DefId(0:6 ~ case1[f6dd]::{impl#0}::get), type of def_id=EarlyBinder { value: FnDef(DefId(0:6 ~ case1[f6dd]::{impl#0}::get), []), .. }
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Creating callee's post state, def_id=DefId(0:6 ~ case1[f6dd]::{impl#0}::get), type of def_id=EarlyBinder { value: FnDef(DefId(0:6 ~ case1[f6dd]::{impl#0}::get), []), .. }
 INFO  rust_mir_checker::analysis::mir_visitor::call_visitor    > ====== Fixed-Point Algorithm Starts ======
 INFO  rust_mir_checker::analysis::mir_visitor::call_visitor    > ====== Fixed-Point Algorithm Starts ======
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Initializing Fixed point iterator with abstract domain: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Initializing Fixed point iterator with abstract domain: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::global_context               > Using cached w.t.o for get
 DEBUG rust_mir_checker::analysis::global_context               > Using cached w.t.o for get
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at param_4000001, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at param_4000001, value: &(local_2)
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is not numerical, store in symbolic domain
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Initializing pre condition: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Initializing pre condition: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Running fixed point iterator
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Running fixed point iterator
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, copy ((*_1).0: i32))) statement: _0 = copy ((*_1).0: i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_0, copy ((*_1).0: i32))) statement: _0 = copy ((*_1).0: i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 4000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 4000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Use(copy ((*_1).0: i32))
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: Use(copy ((*_1).0: i32))
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 4000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 4000000
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get copy RPath=local_2.0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get copy RPath=local_2.0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=result, source_path=local_2.0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In copy or move elements, target_path=result, source_path=local_2.0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_2.0, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_2.0, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: 2, value type: I128
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After lookup_path_and_refine_result: 2, value type: I128
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_2.0, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_2.0, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying 2 to result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > copying 2 to result
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at result, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:8:6: 8:6 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:8:6: 8:6 (#0), scope: scope[0] }, kind: return }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting return at block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Fixed point iterator finishes, post: {bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb0: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Fixed point iterator finishes, post: {bb0: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Finish call visitor, get function post state numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Finish call visitor, get function post state numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; result=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before handling side-effects, pre env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before handling side-effects, pre env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Start to transfer and refine normal return state
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Start to transfer and refine normal return state
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > target_path: local_8
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > target_path: local_8
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > side_effects: [(result, 2)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Handling side effects on call result
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > side_effects: [(result, 2)]
 DEBUG rust_mir_checker::analysis::mir_visitor::call_visitor    > Handling side effects on call result
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In transfer and refine, effects: [(result, 2)], target_path: local_8, source_path: result, arguments: [(local_5, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > effect result 2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In transfer and refine, effects: [(result, 2)], target_path: local_8, source_path: result, arguments: [(local_5, &(local_2))]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > effect result 2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > refined effect local_8 2
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > refined effect local_8 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_8, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_8, value: 2
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After handling side-effects, post env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > After handling side-effects, post env numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb3
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb3
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb3: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb3: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb3: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb3: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb3: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb3: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb4
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb4
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb4: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb4: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_9, Gt(copy _7, const 1_i32))) statement: _9 = Gt(copy _7, const 1_i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting a Assign((_9, Gt(copy _7, const 1_i32))) statement: _9 = Gt(copy _7, const 1_i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Current tainted variables: {}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_9
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get LHS Path: local_9
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: BinaryOp(Gt, copy _7, const 1_i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Get RHS Rvalue: BinaryOp(Gt, copy _7, const 1_i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_7, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_7, result type: i32
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 1
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Scalar(0x00000001), i32)
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Scalar(0x00000001), i32)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Comparison result: 0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_9, value: 0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Comparison result: 0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Updating value at local_9, value: 0
 DEBUG rust_mir_checker::analysis::abstract_domain              > Value is constant integer, store in numerical domain
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting statement:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:20:13: 20:18 (#0), scope: scope[6] }, kind: switchInt(move _9) -> [0: bb6, otherwise: bb5] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:20:13: 20:18 (#0), scope: scope[6] }, kind: switchInt(move _9) -> [0: bb6, otherwise: bb5] }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > In visit_place, current offset: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_9, result type: bool
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > lookup_path_and_refine_result: local_9, result type: bool
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > refined_val: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Result: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb4
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb4
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb4: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb4: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb4: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb4: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb4: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get exit condition for bb5: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb4: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get exit condition for bb5: 0
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > State before adding constraint: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::numerical::linear_constraint > Converting symbolic value into LinearConstraintSystem: 0
 DEBUG rust_mir_checker::analysis::numerical::linear_constraint > Convert result: {false}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > State before adding constraint: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::numerical::linear_constraint > Converting symbolic value into LinearConstraintSystem: 0
 DEBUG rust_mir_checker::analysis::numerical::linear_constraint > Convert result: {false}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > State after adding constraint: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb5
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb5: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > The precondition is bottom, ignore the analysis for this block
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb5
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb5: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb5: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > State after adding constraint: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb5
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb5: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > The precondition is bottom, ignore the analysis for this block
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb5
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb5: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb5: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb5: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb5: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb7
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb7
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb7: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > The precondition is bottom, ignore the analysis for this block
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb7
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb7: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb7: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb7: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > The precondition is bottom, ignore the analysis for this block
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb7
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb7: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb7: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb7: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb7: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb8
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb8
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb8: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > The precondition is bottom, ignore the analysis for this block
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb8: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > The precondition is bottom, ignore the analysis for this block
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb8
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb8
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb8: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb8: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb8: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb8: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb8: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb8: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb9
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb9
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb9: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > The precondition is bottom, ignore the analysis for this block
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb9
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb9: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb9: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb4: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get exit condition for bb6: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > State before adding constraint: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::numerical::linear_constraint > Converting symbolic value into LinearConstraintSystem: 1
 DEBUG rust_mir_checker::analysis::numerical::linear_constraint > Convert result: {true}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > State after adding constraint: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb6
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb6: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_c DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb9: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > The precondition is bottom, ignore the analysis for this block
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb9
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb9: numerical: ⊥, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb9: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Start merging state from predecessors
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get state from bb4: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Get exit condition for bb6: 1
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > State before adding constraint: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::numerical::linear_constraint > Converting symbolic value into LinearConstraintSystem: 1
 DEBUG rust_mir_checker::analysis::numerical::linear_constraint > Convert result: {true}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > State after adding constraint: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Merged state: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Analyzing basic block: bb6
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Pre-Condition for bb6: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
hecker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:20:5: 20:19 (#4), scope: scope[6] }, kind: _10 = core::panicking::panic(const "assertion failed: i > 1") -> unwind unreachable }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Visiting terminator: Terminator { source_info: SourceInfo { span: example/example3/src/case1.rs:20:5: 20:19 (#4), scope: scope[6] }, kind: _10 = core::panicking::panic(const "assertion failed: i > 1") -> unwind unreachable }
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: core::panicking::panic, arguments: [Spanned { node: const "assertion failed: i > 1", span: no-location (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > function operand: core::panicking::panic, arguments: [Spanned { node: const "assertion failed: i > 1", span: no-location (#0) }]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > self.generic_argument_map None
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Before visit_call, env: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(2:10030 ~ core[e242]::panicking::panic), []))
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(ZeroSized, FnDef(DefId(2:10030 ~ core[e242]::panicking::panic), []))
 DEBUG rust_mir_checker::analysis::memory::known_names          > TEST: DefPath { data: [DisambiguatedDefPathData { data: TypeNs("panicking"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs("panic"), disambiguator: 0 }], krate: crate2 }
 DEBUG rust_mir_checker::analysis::memory::known_names          > TEST: DefPath { data: [DisambiguatedDefPathData { data: TypeNs("panicking"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs("panic"), disambiguator: 0 }], krate: crate2 }
 INFO  rust_mir_checker::analysis::memory::constant_value       > known_name: StdPanickingBeginPanic
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn core.panicking.panic<[]>
 INFO  rust_mir_checker::analysis::memory::constant_value       > known_name: StdPanickingBeginPanic
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > func_to_call is fn core.panicking.panic<[]>
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Slice { data: ConstAllocation { .. }, meta: 23 }, &'{erased} str)
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Slice { data: ConstAllocation { .. }, meta: 23 }, &'{erased} str)
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Slice { data: ConstAllocation { .. }, meta: 23 }, &'{erased} str)
 INFO  rust_mir_checker::analysis::mir_visitor::block_visitor   > visit_literal Val(Slice { data: ConstAllocation { .. }, meta: 23 }, &'{erased} str)
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(alias_TOP, TOP)]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} str]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_args: [(alias_TOP, TOP)]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > actual_argument_types: [&'{erased} str]
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_10
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn core.panicking.panic<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(2:10030 ~ core[e242]::panicking::panic)), function_id: Some(2), generic_arguments: [], known_name: StdPanickingBeginPanic, function_name: "core.panicking.panic" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > destination: local_10
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > callee_fun_val: fn core.panicking.panic<[]>
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Calling function Some(FunctionReference { def_id: Some(DefId(2:10030 ~ core[e242]::panicking::panic)), function_id: Some(2), generic_arguments: [], known_name: StdPanickingBeginPanic, function_name: "core.panicking.panic" })
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Successfully handled as special function call
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Successfully handled as special function call
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > State after visiting terminator:
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb6
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > Symbolic:  {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::block_visitor   > ------------------------------------------------------

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Finish analyzing basic block: bb6
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb6: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Post-Condition for bb6: numerical: {<heap_0>.1=2; local_1.0=1; local_2.0=2; local_7=1; local_8=2; local_9=0}, symbolic: {param_1000001: &(local_1), local_6: &(local_2), param_2000001: &(local_2), <heap_0>.[0]: TOP, local_5: &(local_2), constant_0: &(<heap_0>), local_3: &(local_1), param_4000001: &(local_2), local_4: &(local_1), param_3000001: &(local_1), <heap_0>.[1]: TOP}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb6: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > Exit condition bb6: {bb6: 1, bb5: 0}
 DEBUG rust_mir_checker::analysis::mir_visitor::body_visitor    > ###########################################################################

 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker starts ======
 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker starts ======
 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker ends ======
 INFO  rust_mir_checker::checker::assertion_checker             > ====== Assertion Checker ends ======
 DEBUG rust_mir_checker::analysis::analyzer::numerical_analysis > 1 diagnositcs for function "main"
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Fixed-Point Algorithm Ends ==================
 DEBUG rust_mir_checker::analysis::analyzer::numerical_analysis > 1 diagnositcs for function "main"
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Fixed-Point Algorithm Ends ==================
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Numerical Analysis Ends ==================
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Start To Output Diagnostics ==================
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Numerical Analysis Ends ==================
 INFO  rust_mir_checker::analysis::analyzer::numerical_analysis > ================== Start To Output Diagnostics ==================
warning: [MirChecker] Possible error: run into panic code
  --> example/example3/src/case1.rs:20:5
   |
20 |     assert!(i > 1);
   |     ^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [MirChecker] Possible error: run into panic code
  --> example/example3/src/case1.rs:20:5
   |
20 |     assert!(i > 1);
   |     ^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)

 INFO  rust_mir_checker::analysis::callback                     > Numerical Analysis Completed: 39 ms
 INFO  rust_mir_checker::analysis::callback                     > Numerical Analysis Completed: 39 ms
warning: 1 warning emitted

warning: 1 warning emitted

